//
//  LandingConfigurator.swift
//  Clean Swift Base
//
//  Created by Oriol on 10/2/17.
//  Copyright (c) 2017 Oriol. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit
import Swinject

// MARK: Connect View, Interactor, and Presenter

extension LandingInteractor: LandingViewControllerOutput, LandingRouterDataSource, LandingRouterDataDestination {
}

extension LandingPresenter: LandingInteractorOutput {
}

class LandingConfigurator: SwinjectContainerConfigurator {
    // MARK: Object lifecycle
    static let sharedInstance = LandingConfigurator()

    private init() {}

    // Global Variables
    private var container: Container!
    
    // MARK: Configuration
    
    func configure(viewController: LandingViewController) {
        
        let presenter = LandingPresenter()
        presenter.output = viewController
        
        let interactor = LandingInteractor()
        interactor.output = presenter
        
        let router = LandingRouter(viewController:viewController, dataSource:interactor, dataDestination:interactor)
        
        viewController.output = interactor
        viewController.router = router
        
        configureExternalConfiguratorContainers()
    }
    
    // Swinject configurator
    func setContainer(container: Container) {
        self.container = container
    }
    
    func configureExternalConfiguratorContainers() {
        // Future configurators should set their containers here
    }
}
